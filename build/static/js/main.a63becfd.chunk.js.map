{"version":3,"sources":["components/Note.js","services/note.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","deleteNote","label","important","className","content","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","message","text","tipo","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","setMessage","useEffect","noteServices","initialNotes","showMessage","setTimeout","noteToShow","filter","map","changedNote","updated","catch","error","n","toggleImportanceOf","onSubmit","event","preventDefault","objNote","Math","random","concat","value","type","onChange","target","placeholder","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a63becfd.chunk.js","sourcesContent":["const Note = ({ note, toggleImportance, deleteNote }) => {\r\n    const label = note.important\r\n      ? 'make not important' : 'make important'\r\n  \r\n    return (\r\n      <li className=\"note\">\r\n        {note.content} \r\n        <button className=\"btn btn-info btn-submit\" onClick={toggleImportance}>{label}</button>\r\n        <button className=\"btn btn-danger\" onClick={deleteNote}>Delete</button>\r\n      </li>\r\n    )\r\n}\r\n\r\nexport default Note;","import axios from 'axios';\r\nconst baseUrl = \"/api/notes\"\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst eliminar = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, eliminar }","const Notification = ({ message }) => {\r\n    const { text, tipo } = message\r\n\r\n    return (\r\n        <div className={ text ? `${tipo} error` : `${tipo} error error-blank` }>\r\n            Notify: {text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification;","const Footer = () => {\r\n    const footerStyle = {\r\n        color: 'green',\r\n        fontStyle: 'italic',\r\n        fontSize: 16\r\n    }\r\n    return ( \r\n        <div style={footerStyle}>\r\n            <br />\r\n            <em>Note app, Department of Computer Science, University of Helsinki 2021</em>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Footer;","import React, { useState, useEffect } from 'react'\r\nimport Note from './components/Note'\r\nimport noteServices from './services/note'\r\nimport Notification from './components/Notification'\r\nimport Footer from './components/Footer'\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState('')\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [message, setMessage] = useState({})\r\n\r\n  const hook = () => {\r\n    noteServices\r\n      .getAll()\r\n      .then(initialNotes => {\r\n        setNotes(initialNotes)\r\n      })\r\n  }\r\n\r\n  useEffect(hook, [])\r\n\r\n  const showMessage = (text, tipo) => {\r\n    setMessage({text, tipo})\r\n    setTimeout(() => {\r\n      setMessage({})\r\n    }, 2000)\r\n  }\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    const objNote = {\r\n      content: newNote,\r\n      important: Math.random() < 0.5,\r\n    }\r\n\r\n    noteServices\r\n      .create(objNote)\r\n      .then(newNote => {\r\n        setNotes(notes.concat(newNote))\r\n        setNewNote('')\r\n        showMessage(\"Nuevo Nota adicionada.\", \"error-info\")\r\n      })\r\n      .catch(error => {\r\n        showMessage(\"Error ... Nota NO adicionada.\", \"error-wrng\")\r\n      })\r\n  }\r\n\r\n  const handleNoteChange = (event) => {\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n  const noteToShow = showAll \r\n    ? notes\r\n    : notes.filter(note => note.important)\r\n\r\n  const toggleImportanceOf = (note) => {\r\n    \r\n    const { id, content } = note\r\n    const changedNote = { ...note, important: !note.important }\r\n\r\n    noteServices\r\n      .update(id, changedNote)\r\n      .then(updated => {\r\n        setNotes(notes.map(note => note.id !== id ? note : updated))\r\n        showMessage(`Note actualizada con exito.`, \"error-info\")\r\n      })\r\n      .catch(error => {\r\n        setNotes(notes.filter(n => n.id !== id))\r\n        showMessage(`Note ${content} was already deleted from server`, \"error-wrng\")\r\n      })\r\n  }\r\n\r\n  const deleteNote = (id) => {\r\n    noteServices\r\n      .eliminar(id)\r\n      .then(() => {\r\n        setNotes(notes.filter(n => n.id !== id))\r\n        showMessage(`Note eliminada con exito.`, \"error-wrng\")\r\n      })\r\n      .catch(error => {\r\n        setNotes(notes.filter(n => n.id !== id))\r\n        showMessage(`Note was already deleted from server`, \"error-wrng\")\r\n      })      \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={message} />\r\n      <button onClick={() => setShowAll(!showAll)}>\r\n        show { showAll ? 'Important' : 'All' }\r\n      </button>\r\n      <ul>\r\n        {noteToShow.map(\r\n          note => <Note \r\n                      key={note.id} \r\n                      note={note} \r\n                      toggleImportance={() => toggleImportanceOf(note)}\r\n                      deleteNote={() => deleteNote(note.id)}\r\n                  />\r\n          )}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input \r\n          value={newNote}\r\n          type=\"text\"\r\n          onChange={handleNoteChange}\r\n          placeholder=\" New note please ...\"\r\n        />\r\n        <button className=\"btn btn-secondary\" type=\"submit\">Save</button>\r\n      </form>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}